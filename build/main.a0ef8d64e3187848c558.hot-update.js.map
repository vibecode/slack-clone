{"version":3,"sources":["webpack:///./src/models/index.js"],"names":["sequelize","Sequelize","host","dialect","models","ctx","require","keys","map","key","forEach","console","log","module","sequelizeModel","name","Object","modelName","associate"],"mappings":";;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA,IAAMA,SAAS,GAAG,IAAIC,gDAAJ,CAAc,OAAd,EAAuB,OAAvB,EAAgC,IAAhC,EAAsC;AACtDC,MAAI,EAAE,WADgD;AAEtDC,SAAO,EAAE;AAF6C,CAAtC,CAAlB;AAKA,IAAMC,MAAM,GAAG,EAAf,C,CAEA;AACA;AACA;;AACA,IAAMC,GAAG,GAAGC,sEAAZ;;AACAD,GAAG,CACAE,IADH,GAEGC,GAFH,CAEO,UAAAC,GAAG;AAAA,SAAIJ,GAAG,CAACI,GAAD,CAAP;AAAA,CAFV,EAGGC,OAHH,CAGW,UAAAD,GAAG;AAAA,SAAIE,OAAO,CAACC,GAAR,CAAYH,GAAZ,CAAJ;AAAA,CAHd;AAKAJ,GAAG,CACAE,IADH,GAEGC,GAFH,CAEO,UAAAC,GAAG;AAAA,SAAIJ,GAAG,CAACI,GAAD,CAAP;AAAA,CAFV,EAGGC,OAHH,CAGW,UAAAG,MAAM,EAAI;AACjB,MAAMC,cAAc,GAAGD,MAAM,CAACb,SAAD,EAAYC,gDAAZ,CAA7B;AACAG,QAAM,CAACU,cAAc,CAACC,IAAhB,CAAN,GAA8BD,cAA9B;AACD,CANH;AAQAE,MAAM,CAACT,IAAP,CAAYH,MAAZ,EAAoBM,OAApB,CAA4B,UAAAO,SAAS,EAAI;AACvC,MAAI,eAAeb,MAAM,CAACa,SAAD,CAAzB,EAAsC;AACpCb,UAAM,CAACa,SAAD,CAAN,CAAkBC,SAAlB,CAA4Bd,MAA5B;AACD;AACF,CAJD;AAMAA,MAAM,CAACJ,SAAP,GAAmBA,SAAnB;AACAI,MAAM,CAACH,SAAP,GAAmBA,gDAAnB;AAEeG,qEAAf,E","file":"main.a0ef8d64e3187848c558.hot-update.js","sourcesContent":["import Sequelize from 'sequelize'\nimport User from './User'\nimport Channel from './Channel'\nimport Team from './Team'\nimport Message from './Message'\n\nconst sequelize = new Sequelize('xczme', 'xczme', null, {\n  host: 'localhost',\n  dialect: 'postgres'\n})\n\nconst models = {}\n\n//this will load models from directory with webpack\n//require.context(directory, useSubdirectories, regExp)\n//https://webpack.js.org/guides/dependency-management/#require-context\nconst ctx = require.context('.', false, /^\\.\\/(?!index\\.js).*\\.js$/, 'sync')\nctx\n  .keys()\n  .map(key => ctx(key))\n  .forEach(key => console.log(key))\n\nctx\n  .keys()\n  .map(key => ctx(key))\n  .forEach(module => {\n    const sequelizeModel = module(sequelize, Sequelize)\n    models[sequelizeModel.name] = sequelizeModel\n  })\n\nObject.keys(models).forEach(modelName => {\n  if ('associate' in models[modelName]) {\n    models[modelName].associate(models)\n  }\n})\n\nmodels.sequelize = sequelize\nmodels.Sequelize = Sequelize\n\nexport default models\n"],"sourceRoot":""}