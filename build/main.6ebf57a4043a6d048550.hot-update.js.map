{"version":3,"sources":["webpack:///./src/models/Channel.js","webpack:///./src/models/Message.js","webpack:///./src/models/Team.js","webpack:///./src/models/User.js","webpack:///./src/models/index.js"],"names":["sequelize","DataTypes","Channel","define","name","type","STRING","public","BOOLEAN","associate","models","belongsTo","Team","foreignKey","Message","text","User","unique","belogsToMany","through","username","email","password","Sequelize","dialect","import","Object","keys","forEach","modelName"],"mappings":"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","file":"main.6ebf57a4043a6d048550.hot-update.js","sourcesContent":["export default (sequelize, DataTypes) => {\n  const Channel = sequelize.define('channel', {\n    name: {\n      type: DataTypes.STRING,\n      public: DataTypes.BOOLEAN\n    }\n  })\n\n  Channel.associate = models => {\n    Channel.belongsTo(models.Team, {\n      foreignKey: 'teamId'\n    })\n  }\n\n  return Channel\n}\n","export default (sequelize, DataTypes) => {\n  const Message = sequelize.define('message', {\n    text: DataTypes.STRING\n  })\n\n  Message.associate = models => {\n    Message.belongsTo(models.Channel, {\n      foreignKey: 'channelId'\n    })\n    Message.belongsTo(models.User, {\n      foreignKey: 'userId'\n    })\n  }\n\n  return Message\n}\n","export default (sequelize, DataTypes) => {\n  const Team = sequelize.define('team', {\n    name: {\n      type: DataTypes.STRING,\n      unique: true\n    }\n  })\n\n  Team.associate = models => {\n    Team.belogsToMany(models.User, {\n      through: 'member',\n      foreignKey: 'teamId'\n    })\n    Team.belongsTo(models.User, {\n      foreignKey: 'owner'\n    })\n  }\n\n  return Team\n}\n","export default (sequelize, DataTypes) => {\n  const User = sequelize.define('user', {\n    username: {\n      type: DataTypes.STRING,\n      unique: true\n    },\n    email: {\n      type: DataTypes.STRING,\n      unique: true\n    },\n    password: {\n      type: DataTypes.STRING\n    }\n  })\n\n  User.associate = models => {\n    User.belogsToMany(models.Team, {\n      through: 'member',\n      foreignKey: 'userId'\n    })\n  }\n\n  return User\n}\n","import Sequelize from 'sequelize'\nimport User from './User'\nimport Channel from './Channel'\nimport Team from './Team'\nimport Message from './Message'\n\nconst sequelize = new Sequelize('slack', 'postgres', 'postgres', {\n  dialect: 'postgres'\n})\n\nconst models = {\n  User: sequelize.import('./User'),\n  Channel: sequelize.import('./Channel'),\n  Team: sequelize.import('./Team'),\n  Message: sequelize.import('./Message')\n}\n\nObject.keys(models).forEach(modelName => {\n  if ('associate' in models[modelName]) {\n    models[modelName].associate(models)\n  }\n})\n\nmodels.sequelize = sequelize\nmodels.Sequelize = Sequelize\n\nexport default models\n"],"sourceRoot":""}