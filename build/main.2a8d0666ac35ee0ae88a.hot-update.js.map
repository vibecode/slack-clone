{"version":3,"sources":["webpack:///./src/models/Channel.js","webpack:///./src/models/index.js"],"names":["sequelize","DataTypes","Channel","define","name","type","STRING","public","BOOLEAN","associate","models","belongsTo","team","foreignKey","Sequelize","host","dialect","ctx","require","keys","map","key","forEach","console","log","module","sequelizeModel","Object","modelName"],"mappings":";;;;;;;;;;;;AAAA;AAAe,yEAACA,SAAD,EAAYC,SAAZ,EAA0B;AACvC,MAAMC,OAAO,GAAGF,SAAS,CAACG,MAAV,CAAiB,SAAjB,EAA4B;AAC1CC,QAAI,EAAE;AACJC,UAAI,EAAEJ,SAAS,CAACK,MADZ;AAEJC,YAAM,EAAEN,SAAS,CAACO;AAFd;AADoC,GAA5B,CAAhB;;AAOAN,SAAO,CAACO,SAAR,GAAoB,UAAAC,MAAM,EAAI;AAC5BR,WAAO,CAACS,SAAR,CAAkBD,MAAM,CAACE,IAAzB,EAA+B;AAC7BC,gBAAU,EAAE;AADiB,KAA/B;AAGD,GAJD;;AAMA,SAAOX,OAAP;AACD,CAfD,E;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA,IAAMF,SAAS,GAAG,IAAIc,gDAAJ,CAAc,OAAd,EAAuB,OAAvB,EAAgC,IAAhC,EAAsC;AACtDC,MAAI,EAAE,WADgD;AAEtDC,SAAO,EAAE;AAF6C,CAAtC,CAAlB;AAKA,IAAMN,MAAM,GAAG,EAAf,C,CAEA;AACA;AACA;;AACA,IAAMO,GAAG,GAAGC,sEAAZ;;AACAD,GAAG,CACAE,IADH,GAEGC,GAFH,CAEO,UAAAC,GAAG;AAAA,SAAIJ,GAAG,CAACI,GAAD,CAAP;AAAA,CAFV,EAGGC,OAHH,CAGW,UAAAD,GAAG;AAAA,SAAIE,OAAO,CAACC,GAAR,CAAYH,GAAZ,CAAJ;AAAA,CAHd;AAKAJ,GAAG,CACAE,IADH,GAEGC,GAFH,CAEO,UAAAC,GAAG;AAAA,SAAIJ,GAAG,CAACI,GAAD,CAAP;AAAA,CAFV,EAGGC,OAHH,CAGW,UAAAG,MAAM,EAAI;AACjB,MAAMC,cAAc,GAAGD,MAAM,CAACzB,SAAD,EAAYc,gDAAZ,CAA7B;AACAJ,QAAM,CAACgB,cAAc,CAACtB,IAAhB,CAAN,GAA8BsB,cAA9B;AACD,CANH;AAQAC,MAAM,CAACR,IAAP,CAAYT,MAAZ,EAAoBY,OAApB,CAA4B,UAAAM,SAAS,EAAI;AACvC,MAAI,eAAelB,MAAM,CAACkB,SAAD,CAAzB,EAAsC;AACpClB,UAAM,CAACkB,SAAD,CAAN,CAAkBnB,SAAlB,CAA4BC,MAA5B;AACD;AACF,CAJD;AAMAA,MAAM,CAACV,SAAP,GAAmBA,SAAnB;AACAU,MAAM,CAACI,SAAP,GAAmBA,gDAAnB;AAEeJ,qEAAf,E","file":"main.2a8d0666ac35ee0ae88a.hot-update.js","sourcesContent":["export default (sequelize, DataTypes) => {\n  const Channel = sequelize.define('channel', {\n    name: {\n      type: DataTypes.STRING,\n      public: DataTypes.BOOLEAN\n    }\n  })\n\n  Channel.associate = models => {\n    Channel.belongsTo(models.team, {\n      foreignKey: 'teamId'\n    })\n  }\n\n  return Channel\n}\n","import Sequelize from 'sequelize'\nimport User from './User'\nimport Channel from './Channel'\nimport Team from './Team'\nimport Message from './Message'\n\nconst sequelize = new Sequelize('xczme', 'xczme', null, {\n  host: 'localhost',\n  dialect: 'postgres'\n})\n\nconst models = {}\n\n//this will load models from directory with webpack\n//require.context(directory, useSubdirectories, regExp)\n//https://webpack.js.org/guides/dependency-management/#require-context\nconst ctx = require.context('.', false, /^\\.\\/(?!index\\.js).*\\.js$/, 'sync')\nctx\n  .keys()\n  .map(key => ctx(key))\n  .forEach(key => console.log(key))\n\nctx\n  .keys()\n  .map(key => ctx(key))\n  .forEach(module => {\n    const sequelizeModel = module(sequelize, Sequelize)\n    models[sequelizeModel.name] = sequelizeModel\n  })\n\nObject.keys(models).forEach(modelName => {\n  if ('associate' in models[modelName]) {\n    models[modelName].associate(models)\n  }\n})\n\nmodels.sequelize = sequelize\nmodels.Sequelize = Sequelize\n\nexport default models\n"],"sourceRoot":""}